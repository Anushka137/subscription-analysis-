[
  {
    "question": "Show payment trends over time",
    "sql": "SELECT DATE_FORMAT(p.created_date, '%Y-%m') AS month_period, SUM(p.trans_amount_decimal) AS value FROM subscription_payment_details p WHERE p.status = 'ACTIVE' GROUP BY DATE_FORMAT(p.created_date, '%Y-%m') ORDER BY month_period",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T11:49:25.077869",
    "chart_type": null,
    "query_category": "trend_analysis",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "show them weekly instead",
    "sql": "SELECT CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) AS week_period, SUM(p.trans_amount_decimal) AS value FROM subscription_payment_details p WHERE p.status = 'ACTIVE' GROUP BY CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) ORDER BY week_period",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T11:49:41.084468",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "Compare subscribers with more than 1 and more than 2 subscriptions",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T11:49:49.646044",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "complex",
    "success_score": 1.0
  },
  {
    "question": "Revenue for 24 april 2025",
    "sql": "SELECT COUNT(*) as num_subscriptions FROM subscription_contract_v2 WHERE DATE(subcription_start_date) = '2025-04-24'",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-04T11:52:03.237002",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 0.0
  },
  {
    "question": "Compare subscribers with more than 1 and more than 2 subscriptions",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T11:52:13.240205",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "complex",
    "success_score": 1.0
  },
  {
    "question": "Revenue for 24 april 2025",
    "sql": "\nSELECT SUM(p.trans_amount_decimal) as total_revenue, COUNT(*) as num_payments\nFROM subscription_payment_details p\nWHERE DATE(p.created_date) BETWEEN DATE_SUB('2025-04-24', INTERVAL 3 DAY) AND DATE_ADD('2025-04-24', INTERVAL 3 DAY)\nAND p.status = 'ACTIVE'\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:03:52.433443",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "Number of subscriptions on 24 april 2025",
    "sql": "SELECT COUNT(*) as num_subscriptions FROM subscription_contract_v2 WHERE DATE(subcription_start_date) = '2025-04-24'",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:04:03.923267",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "Compare subscribers with more than 1 and more than 2 subscriptions",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:04:16.673040",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "complex",
    "success_score": 1.0
  },
  {
    "question": "make graph for the same",
    "sql": "SELECT CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) AS week_period, SUM(p.trans_amount_decimal) AS value FROM subscription_payment_details p WHERE p.status = 'ACTIVE' GROUP BY CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) ORDER BY week_period",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-04T12:04:46.671097",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "the graph was supposed to be for the comparison",
    "improvement_category": "general_improvement"
  },
  {
    "question": "Compare subscribers with more than 1 and more than 2 subscriptions",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:06:58.525463",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "complex",
    "success_score": 1.0
  },
  {
    "question": "make pie chart for the same",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:07:12.761211",
    "chart_type": null,
    "query_category": "pie_chart_request",
    "sql_complexity": "complex",
    "success_score": 1.0
  },
  {
<<<<<<< HEAD
    "question": "shwo me weekly growth of subscriptions through a graph",
    "sql": "SELECT CONCAT(YEAR(c.subcription_start_date), '-W', LPAD(WEEK(c.subcription_start_date), 2, '0')) AS week_period, COUNT(*) AS subscription_count FROM subscription_contract_v2 c GROUP BY week_period ORDER BY week_period",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:21:39.669921",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "show me weekly grwoth in numbe of transactions",
    "sql": "SELECT CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) AS week_period, COUNT(p.subscription_id) AS transaction_count FROM subscription_payment_details p WHERE p.status = 'ACTIVE' GROUP BY CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) ORDER BY week_period",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:22:25.766983",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "number of transactions in 16th week of 2025",
    "sql": "SELECT COUNT(*) AS transaction_count FROM subscription_payment_details p WHERE WEEK(p.created_date) = 16 AND YEAR(p.created_date) = 2025",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:22:58.475064",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "shoe me nuber of transaction in 13th week of 2025",
    "sql": "SELECT COUNT(*) AS number_of_transactions FROM subscription_payment_details p WHERE YEAR(p.created_date) = 2025 AND WEEK(p.created_date) = 13",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:26:57.303199",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "show me weekly growth in number of transactions",
    "sql": "SELECT CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) AS week_period, COUNT(p.subscription_id) AS transaction_count FROM subscription_payment_details p WHERE p.created_date >= DATE_SUB(CURRENT_DATE, INTERVAL 12 WEEK) GROUP BY CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) ORDER BY week_period",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:28:36.119050",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "number of transactions in 13th week of 2025",
    "sql": "SELECT COUNT(*) AS number_of_transactions FROM subscription_payment_details p WHERE YEAR(p.created_date) = 2025 AND WEEK(p.created_date) = 13",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:30:40.648520",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "show me weekly growth in number of transaction of all time",
    "sql": "SELECT CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) AS week_period, COUNT(*) AS transaction_count FROM subscription_payment_details p GROUP BY week_period ORDER BY week_period",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:32:53.244427",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "tell me numbe of transaction in 12th week of 2025",
    "sql": "SELECT COUNT(*) AS transaction_count FROM subscription_payment_details p WHERE WEEK(p.created_date) = 12 AND YEAR(p.created_date) = 2025",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:33:19.513811",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "show me weekly gain in revenue of all time",
    "sql": "SELECT CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) AS week_period, SUM(p.trans_amount_decimal) AS value FROM subscription_payment_details p WHERE p.status = 'ACTIVE' GROUP BY CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) ORDER BY week_period",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:33:53.378744",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "total revenue gained in 16th week of 2025",
    "sql": "SELECT SUM(p.trans_amount_decimal) AS total_revenue FROM subscription_payment_details p WHERE p.status = 'ACTIVE' AND YEAR(p.created_date) = 2025 AND WEEKOFYEAR(p.created_date) = 16",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:35:06.756340",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "show me weekly revenue gain through graph",
    "sql": "SELECT CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) AS week_period, SUM(p.trans_amount_decimal) AS value FROM subscription_payment_details p WHERE p.status = 'ACTIVE' GROUP BY CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) ORDER BY week_period",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-04T12:36:52.969576",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "data for 16th week is missing",
    "improvement_category": "general_improvement"
  },
  {
    "question": "show me weekly revenue gained",
    "sql": "SELECT CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) AS week_period, SUM(p.trans_amount_decimal) AS value FROM subscription_payment_details p WHERE p.status = 'ACTIVE' GROUP BY CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) ORDER BY week_period",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-04T12:37:41.924328",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "u didn't show data for 16th week of 2025",
    "improvement_category": "general_improvement"
  },
  {
    "question": "Number of subscriptions on 24 april 2025",
    "sql": "SELECT COUNT(*) as num_subscriptions FROM subscription_contract_v2 WHERE DATE(subcription_start_date) = '2025-04-24'",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T12:15:07.702402",
=======
    "question": "number of merchants with more than 5 payments",
    "sql": "SELECT c.merchant_user_id, COUNT(p.subscription_id) AS payment_count FROM subscription_contract_v2 c LEFT JOIN subscription_payment_details p ON c.subscription_id = p.subscription_id WHERE p.trans_amount_decimal > 0 GROUP BY c.merchant_user_id HAVING COUNT(p.subscription_id) > 5",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:17:09.127120",
    "chart_type": null,
    "query_category": "user_analysis",
    "sql_complexity": "complex",
    "success_score": 1.0
  },
  {
    "question": "number of merhcnats with more than 5 subscriptions and number of merchants with more than 5 payments",
    "sql": "\nSELECT 'More than 5 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 5) t1\nUNION ALL\nSELECT 'More than 5 Payments' as category, COUNT(*) as value  \nFROM (SELECT c.merchant_user_id FROM subscription_contract_v2 c \n      JOIN subscription_payment_details p ON c.subscription_id = p.subscription_id \n      WHERE p.status = 'ACTIVE'\n      GROUP BY c.merchant_user_id HAVING COUNT(p.subscription_id) > 5) t2\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:22:55.595938",
    "chart_type": null,
    "query_category": "user_analysis",
    "sql_complexity": "complex",
    "success_score": 1.0
  },
  {
    "question": "Tell me the last date for which data is available",
    "sql": "SELECT MAX(c.subcription_end_date) AS last_available_date FROM subscription_contract_v2 c",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:23:11.237027",
>>>>>>> upstream/main
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "Number of subscriptions between 1 may 2025 and 31 may 2025",
    "sql": "\nSELECT COUNT(*) as num_subscriptions \nFROM subscription_contract_v2 \nWHERE DATE(subcription_start_date) BETWEEN '2025-05-01' AND '2025-05-31'\n",
    "was_helpful": true,
    "feedback_type": "positive",
<<<<<<< HEAD
    "timestamp": "2025-07-07T12:15:17.206771",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "Visualize payment data with a bar chart",
    "sql": "\nSELECT c.merchant_user_id, COUNT(*) AS total_payments\nFROM subscription_payment_details p\nJOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id\nGROUP BY c.merchant_user_id\nORDER BY total_payments DESC\nLIMIT 20\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T12:15:33.013954",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "medium",
    "success_score": 1.0
  },
  {
    "question": "Show payment success rate for merchants with more than 1 transaction visually",
    "sql": "SELECT CASE WHEN p.status = 'ACTIVE' THEN 'Success' ELSE 'Failure' END AS category, COUNT(*) AS value FROM subscription_payment_details p JOIN subscription_contract_v2 c ON c.subscription_id = p.subscription_id GROUP BY category",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T12:17:04.778558",
    "chart_type": null,
    "query_category": "rate_analysis",
    "sql_complexity": "medium",
    "success_score": 0.0,
    "improvement_suggestion": "return success rate and failrue and result in text",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "Show payment success rate for merchants with more than 1 transaction visually",
    "sql": "SELECT CASE WHEN p.status = 'ACTIVE' THEN 'Success' ELSE 'Failed' END AS category, COUNT(*) AS value FROM subscription_payment_details p LEFT JOIN subscription_contract_v2 c ON c.subscription_id = p.subscription_id GROUP BY category",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T12:18:19.614317",
    "chart_type": null,
    "query_category": "rate_analysis",
    "sql_complexity": "medium",
    "success_score": 0.0,
    "improvement_suggestion": "salso show the success rate and failure rate in result along with graph",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "Enter your query (or 'exit' to quit): Show payment success rate for merchants with more than 1 transaction visually",
    "sql": "SELECT CASE WHEN p.status = 'ACTIVE' THEN 'Success' ELSE 'Failure' END AS category, COUNT(*) AS value FROM subscription_payment_details p LEFT JOIN subscription_contract_v2 c ON c.subscription_id = p.subscription_id GROUP BY category",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T12:25:48.386511",
    "chart_type": null,
    "query_category": "rate_analysis",
    "sql_complexity": "medium",
    "success_score": 1.0
  },
  {
    "question": "How many new subscriptions did we get this month?",
    "sql": "SELECT COUNT(*) as new_subscriptions FROM subscription_contract_v2 c WHERE c.subcription_start_date BETWEEN DATE_FORMAT(CURRENT_DATE, '%Y-%m-01') AND LAST_DAY(CURRENT_DATE)",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T12:27:54.870426",
=======
    "timestamp": "2025-07-04T12:23:23.619642",
>>>>>>> upstream/main
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "Revenue between 1 april 2025 and 30 april 2025",
    "sql": "\nSELECT SUM(p.trans_amount_decimal) as total_revenue, COUNT(*) as num_payments\nFROM subscription_payment_details p\nWHERE DATE(p.created_date) BETWEEN '2025-04-01' AND '2025-04-30' \nAND p.status = 'ACTIVE'\n",
    "was_helpful": true,
    "feedback_type": "positive",
<<<<<<< HEAD
    "timestamp": "2025-07-07T12:34:22.703683",
=======
    "timestamp": "2025-07-04T12:23:41.357747",
>>>>>>> upstream/main
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
<<<<<<< HEAD
    "question": "Show payment trends over time",
    "sql": "SELECT DATE_FORMAT(p.created_date, '%Y-%m-%d') AS day_period, SUM(p.trans_amount_decimal) AS value FROM subscription_payment_details p WHERE p.status = 'ACTIVE' GROUP BY DATE_FORMAT(p.created_date, '%Y-%m-%d') ORDER BY day_period",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T12:34:46.921611",
    "chart_type": null,
    "query_category": "trend_analysis",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "make the above graph for weekly data",
    "sql": "SELECT CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) AS week_period, SUM(p.trans_amount_decimal) AS value FROM subscription_payment_details p WHERE p.status = 'ACTIVE' GROUP BY CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) ORDER BY week_period",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T12:35:06.431541",
=======
    "question": "show me weekly growth in number of transactions",
    "sql": "SELECT CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) AS week_period, COUNT(*) AS transaction_count FROM subscription_payment_details p WHERE p.created_date >= DATE_SUB(CURDATE(), INTERVAL 12 WEEK) GROUP BY week_period ORDER BY week_period",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:28:49.174348",
>>>>>>> upstream/main
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
<<<<<<< HEAD
    "question": "Compare subscribers with more than 1 and more than 2 subscriptions",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T12:35:28.531204",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "complex",
    "success_score": 0.0,
    "improvement_suggestion": "generate a graph for the same",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "Compare subscribers with more than 1 and more than 2 subscriptions",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T12:36:01.864545",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "complex",
    "success_score": 0.0,
    "improvement_suggestion": "genreate a bar graph sowcasing both the numbers",
    "improvement_category": "general_improvement"
  },
  {
    "question": "Compare subscribers with more than 1 and more than 2 subscriptions",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T12:39:31.597903",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "complex",
    "success_score": 0.0,
    "improvement_suggestion": "generatea  graph for the same",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "Create a pie chart breakdown of successful vs failed payments",
    "sql": "\nSELECT \n    CASE WHEN status = 'ACTIVE' THEN 'Successful' ELSE 'Failed' END as category,\n    COUNT(*) as value\nFROM subscription_payment_details\nGROUP BY CASE WHEN status = 'ACTIVE' THEN 'Successful' ELSE 'Failed' END\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T12:43:43.771091",
    "chart_type": null,
    "query_category": "pie_chart_request",
=======
    "question": "Find subscriptions that are due this week with customer details",
    "sql": "SELECT c.merchant_user_id, COALESCE(c.user_email, 'Email not provided') AS email, COALESCE(c.user_name, 'Name not provided') AS name, c.subcription_start_date, c.subcription_end_date FROM subscription_contract_v2 c WHERE c.subcription_end_date BETWEEN CURRENT_DATE AND DATE_ADD(CURRENT_DATE, INTERVAL 7 DAY)",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:29:15.297215",
    "chart_type": null,
    "query_category": "general_query",
>>>>>>> upstream/main
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
<<<<<<< HEAD
    "question": "Show me the top 10 customers by total subscription value",
    "sql": "SELECT c.merchant_user_id, COALESCE(c.user_email, 'Email not provided') as email, COALESCE(c.user_name, 'Name not provided') as name, COALESCE(c.renewal_amount, c.max_amount_decimal, 0) as subscription_value FROM subscription_contract_v2 c ORDER BY COALESCE(c.renewal_amount, c.max_amount_decimal, 0) DESC LIMIT 10",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T12:44:09.928838",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "Show me the top 10 customers by totall payement they have done",
    "sql": "SELECT c.merchant_user_id, COALESCE(c.user_email, 'Email not provided') as email, COALESCE(c.user_name, 'Name not provided') as name, SUM(p.trans_amount_decimal) AS total_payment FROM subscription_contract_v2 c LEFT JOIN subscription_payment_details p ON c.subscription_id = p.subscription_id WHERE p.status = 'ACTIVE' GROUP BY c.merchant_user_id, c.user_email, c.user_name ORDER BY total_payment DESC LIMIT 10",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T12:44:38.322547",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "medium",
    "success_score": 1.0
  },
  {
    "question": "Compare subscribers with more than 1 and more than 2 subscriptions",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T12:44:58.567367",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "complex",
    "success_score": 0.0,
    "improvement_suggestion": "generate a grpah for the same",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "Compare subscribers with more than 1 and more than 2 subscriptions",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T12:48:32.717450",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "complex",
    "success_score": 0.0,
    "improvement_suggestion": "generate a graph for the same",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "Compare subscribers with more than 1 and more than 2 subscriptions",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T12:53:30.748324",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "complex",
    "success_score": 0.0,
    "improvement_suggestion": "generate a bar graph",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "number of merchants with more than 5 subscriptions and number of merchants with more than 5 payments",
    "sql": "\nSELECT 'More than 5 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 5) t1\nUNION ALL\nSELECT 'More than 5 Payments' as category, COUNT(*) as value  \nFROM (SELECT c.merchant_user_id FROM subscription_contract_v2 c \n      JOIN subscription_payment_details p ON c.subscription_id = p.subscription_id \n      WHERE p.status = 'ACTIVE'\n      GROUP BY c.merchant_user_id HAVING COUNT(p.subscription_id) > 5) t2\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T12:56:04.871686",
    "chart_type": null,
    "query_category": "user_analysis",
    "sql_complexity": "complex",
    "success_score": 1.0
  },
  {
    "question": "Compare subscribers with more than 1 and more than 2 subscriptions",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T12:56:23.277741",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "complex",
    "success_score": 0.0,
    "improvement_suggestion": "generate a bar graph",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "revenue for 26 april 2025",
    "sql": "\nSELECT SUM(p.trans_amount_decimal) as total_revenue, COUNT(*) as num_payments\nFROM subscription_payment_details p\nWHERE DATE(p.created_date) BETWEEN DATE_SUB('2025-04-26', INTERVAL 3 DAY) AND DATE_ADD('2025-04-26', INTERVAL 3 DAY)\nAND p.status = 'ACTIVE'\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T14:52:04.916171",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "number of merchants with more than 5 subscriptions and number of merchants with more than 5 payments",
    "sql": "\nSELECT 'More than 5 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 5) t1\nUNION ALL\nSELECT 'More than 5 Payments' as category, COUNT(*) as value  \nFROM (SELECT c.merchant_user_id FROM subscription_contract_v2 c \n      JOIN subscription_payment_details p ON c.subscription_id = p.subscription_id \n      WHERE p.status = 'ACTIVE'\n      GROUP BY c.merchant_user_id HAVING COUNT(p.subscription_id) > 5) t2\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T14:52:22.985309",
    "chart_type": null,
    "query_category": "user_analysis",
    "sql_complexity": "complex",
    "success_score": 1.0
  },
  {
    "question": "Show me a pie chart of all payment statuses for the last 90 days.",
    "sql": "SELECT p.status AS category, COUNT(*) AS value FROM subscription_payment_details p WHERE p.created_date >= DATE_SUB(CURRENT_DATE, INTERVAL 90 DAY) GROUP BY p.status",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T14:54:49.299585",
    "chart_type": null,
    "query_category": "pie_chart_request",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "Show me a pie chart of all payment statuses for the last 90 days.",
    "sql": "SELECT p.status AS category, COUNT(*) AS value FROM subscription_payment_details p WHERE p.created_date >= DATE_SUB(CURRENT_DATE, INTERVAL 90 DAY) GROUP BY p.status",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T14:55:17.327315",
    "chart_type": null,
    "query_category": "pie_chart_request",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "generate a bar graph for the same",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "shoow me suscriptions summary",
    "sql": "SELECT COUNT(*) AS total_subscriptions, SUM(CASE WHEN c.status = 'ACTIVE' THEN 1 ELSE 0 END) AS active_subscriptions, SUM(CASE WHEN c.status = 'CANCELLED' THEN 1 ELSE 0 END) AS cancelled_subscriptions FROM subscription_contract_v2 c",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T14:59:12.936340",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "show subscriptions growth in month of may  2025 using a graph",
    "sql": "SELECT DATE_FORMAT(c.subcription_start_date, '%Y-%m') AS month_period, COUNT(*) AS subscription_count FROM subscription_contract_v2 c WHERE DATE_FORMAT(c.subcription_start_date, '%Y-%m') = '2025-05' GROUP BY month_period",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T15:00:01.173130",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "generate the graph for all days of the month may 2025",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "subscirption graph for may 2025",
    "sql": "SELECT DATE_FORMAT(p.created_date, '%Y-%m') AS month_period, SUM(p.trans_amount_decimal) AS value FROM subscription_payment_details p WHERE p.status = 'ACTIVE' AND DATE_FORMAT(p.created_date, '%Y-%m') BETWEEN '2025-05' AND '2025-05' GROUP BY DATE_FORMAT(p.created_date, '%Y-%m') ORDER BY month_period",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T15:03:43.304505",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "what value have you generated, kinlfy mention specifiically",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "number of sbscription graph for may 2025 weekly",
    "sql": "SELECT CONCAT(YEAR(c.subcription_start_date), '-W', LPAD(WEEK(c.subcription_start_date), 2, '0')) AS week_period, COUNT(*) AS subscription_count FROM subscription_contract_v2 c WHERE DATE_FORMAT(c.subcription_start_date, '%Y-%m') = '2025-05' GROUP BY week_period ORDER BY week_period",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T15:08:08.000417",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "show payement trends",
    "sql": "SELECT CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) AS week_period, SUM(p.trans_amount_decimal) AS value FROM subscription_payment_details p WHERE p.status = 'ACTIVE' GROUP BY CONCAT(YEAR(p.created_date), '-W', LPAD(WEEK(p.created_date), 2, '0')) ORDER BY week_period",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T15:08:38.748446",
    "chart_type": null,
    "query_category": "trend_analysis",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "genreate a bar graph",
    "improvement_category": "general_improvement"
  },
  {
    "question": "Create a pie chart breakdown of successful vs failed payments",
    "sql": "\nSELECT \n    CASE WHEN status = 'ACTIVE' THEN 'Successful' ELSE 'Failed' END as category,\n    COUNT(*) as value\nFROM subscription_payment_details\nGROUP BY CASE WHEN status = 'ACTIVE' THEN 'Successful' ELSE 'Failed' END\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T15:14:35.158037",
    "chart_type": null,
    "query_category": "pie_chart_request",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "Create a pie chart breakdown of successful vs failed payments for april 2025",
    "sql": "\nSELECT \n    CASE WHEN status = 'ACTIVE' THEN 'Successful' ELSE 'Failed' END as category,\n    COUNT(*) as value\nFROM subscription_payment_details\nWHERE WHERE DATE_FORMAT(p.created_date, '%Y-%m') = '2025-04' GROUP BY CASE WHEN status = 'ACTIVE' THEN 'Successful' ELSE 'Failed' END\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T15:15:26.470750",
    "chart_type": null,
    "query_category": "pie_chart_request",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "show me icnrease in successful payement rate monthly thorugha  agraph",
    "sql": "SELECT DATE_FORMAT(p.created_date, '%Y-%m') AS month_period, SUM(CASE WHEN p.status = 'ACTIVE' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS value FROM subscription_payment_details p GROUP BY month_period ORDER BY month_period",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T15:16:15.086511",
    "chart_type": null,
    "query_category": "rate_analysis",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "Show me the trend of new subscriptions over the last 60 days",
    "sql": "SELECT DATE_FORMAT(c.subcription_start_date, '%Y-%m-%d') AS day_period, COUNT(*) AS value FROM subscription_contract_v2 c WHERE c.subcription_start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 60 DAY) GROUP BY day_period ORDER BY day_period",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T15:19:17.750850",
    "chart_type": null,
    "query_category": "trend_analysis",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "Compare the number of active vs closed subscriptions",
    "sql": "SELECT c.status, COUNT(*) AS value FROM subscription_contract_v2 c GROUP BY c.status",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T15:20:30.470204",
    "chart_type": "line",
    "query_category": "comparison_analysis",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "i want only active and closed and show them as a line chart",
    "improvement_category": "chart_type_line"
  },
  {
    "question": "Can you compare active and closed subscriptions again?",
    "sql": "SELECT DATE_FORMAT(c.subcription_start_date, '%Y-%m') AS month_period, COUNT(*) AS value FROM subscription_contract_v2 c WHERE c.status = 'ACTIVE' OR c.status = 'CLOSED' GROUP BY DATE_FORMAT(c.subcription_start_date, '%Y-%m') ORDER BY month_period",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T15:21:45.598707",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "shoe me dta of number of active and number of closed subscriptions in a lienar graph",
    "improvement_category": "general_improvement"
  },
  {
    "question": "Compare the number of active vs closed subscriptions.",
    "sql": "SELECT c.status, COUNT(*) AS value FROM subscription_contract_v2 c GROUP BY c.status",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T15:35:29.268416",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "shoe me only active and closed",
    "improvement_category": "general_improvement"
  },
  {
    "question": "Compare the number of active vs closed subscriptions.",
    "sql": "SELECT c.status, COUNT(*) AS value FROM subscription_contract_v2 c GROUP BY c.status",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T15:35:46.834696",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "remove init and reject",
    "improvement_category": "general_improvement"
  },
  {
    "question": "Compare the number of active vs closed subscriptions.",
    "sql": "SELECT c.status, COUNT(*) AS value FROM subscription_contract_v2 c GROUP BY c.status",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T15:36:28.976583",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "remove init and reject, li eant to see active and  closed only",
    "improvement_category": "general_improvement"
  },
  {
    "question": "Compare the number of active vs closed subscriptions.",
    "sql": "SELECT c.status, COUNT(*) AS value FROM subscription_contract_v2 c GROUP BY c.status",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-07T15:41:27.918023",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "remove init and reject bars, jsut keep active and closed",
    "improvement_category": "general_improvement"
  },
  {
    "question": "Compare the number of active vs closed subscriptions. (remove init and reject bars, jsut keep active and closed)",
    "sql": "SELECT c.status, COUNT(*) AS value FROM subscription_contract_v2 c WHERE c.status IN ('ACTIVE',   'CLOSED') GROUP BY c.status",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-07T15:41:39.596257",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "Compare subscribers with more than 1 and more than 2 subscriptions",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-08T10:51:35.452644",
    "chart_type": null,
    "query_category": "comparison_analysis",
    "sql_complexity": "complex",
    "success_score": 0.0,
    "improvement_suggestion": "generate a bar for the same comparing and showing number of subscriber with more than 1 subscription and with more than 2 subscription",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "Compare subscribers with more than 1 and more than 2 subscriptions (generate a bar for the same comparing and showing number of subscriber with more than 1 subscription and with more than 2 subscription)",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-08T10:51:49.426497",
    "chart_type": null,
    "query_category": "rate_analysis",
    "sql_complexity": "complex",
    "success_score": 0.0,
    "improvement_suggestion": "generate a bar graph",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "Compare subscribers with more than 1 and more than 2 subscriptions (generate a bar graph)",
    "sql": "\nSELECT 'More than 1 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 1) t1\nUNION ALL\nSELECT 'More than 2 Subscriptions' as category, COUNT(*) as value  \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 2) t2\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-08T10:52:03.484803",
    "chart_type": null,
    "query_category": "rate_analysis",
    "sql_complexity": "complex",
    "success_score": 0.0,
    "improvement_suggestion": "generate a graph",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "Give me a business health summary: what was the total revenue for last month, how many new subscriptions did we get in the last 7 days, and what was the payment success rate for 24 april 2025",
    "sql": "\nSELECT SUM(p.trans_amount_decimal) as total_revenue, COUNT(*) as num_payments\nFROM subscription_payment_details p\nWHERE DATE(p.created_date) BETWEEN DATE_SUB('2025-04-24', INTERVAL 3 DAY) AND DATE_ADD('2025-04-24', INTERVAL 3 DAY)\nAND p.status = 'ACTIVE'\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-08T10:56:28.661421",
    "chart_type": null,
    "query_category": "rate_analysis",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "also tell me payment success rate for 24 april 2025 and we didnt wanted number of payement instead tell new subscrptions in last 7 days",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "Give me a business health summary: what was the total revenue for last month, how many new subscriptions did we get in the last 7 days, and what was the payment success rate for 24 april 2025 (also tell me payment success rate for 24 april 2025 and we didnt wanted number of payement instead tell new subscrptions in last 7 days)",
    "sql": "\nSELECT SUM(p.trans_amount_decimal) as total_revenue, COUNT(*) as num_payments\nFROM subscription_payment_details p\nWHERE DATE(p.created_date) BETWEEN DATE_SUB('2025-04-24', INTERVAL 3 DAY) AND DATE_ADD('2025-04-24', INTERVAL 3 DAY)\nAND p.status = 'ACTIVE'\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-08T10:56:43.124164",
    "chart_type": null,
    "query_category": "rate_analysis",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "tell me reveneu for 24 april 2025",
    "improvement_category": "general_improvement"
  },
  {
    "question": "Give me a business health summary: what was the total revenue for last month, how many new subscriptions did we get in the last 7 days, and what was the payment success rate for 24 april 2025 (tell me reveneu for 24 april 2025)",
    "sql": "\nSELECT SUM(p.trans_amount_decimal) as total_revenue, COUNT(*) as num_payments\nFROM subscription_payment_details p\nWHERE DATE(p.created_date) BETWEEN DATE_SUB('2025-04-24', INTERVAL 3 DAY) AND DATE_ADD('2025-04-24', INTERVAL 3 DAY)\nAND p.status = 'ACTIVE'\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-08T10:57:00.988435",
    "chart_type": null,
    "query_category": "rate_analysis",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "also add total revenue for 24 april 2025",
    "improvement_category": "general_improvement"
  },
  {
    "question": "how many new subscriptions did we get in the last 50 days",
    "sql": "SELECT COUNT(*) as new_subscriptions FROM subscription_contract_v2 c WHERE c.subcription_start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 50 DAY)",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-08T11:02:47.222448",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "also give me payement success rate for 24 april 2025",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "and what was the payment success rate for24 april 2025",
    "sql": "\nSELECT SUM(p.trans_amount_decimal) as total_revenue, COUNT(*) as num_payments\nFROM subscription_payment_details p\nWHERE DATE(p.created_date) BETWEEN DATE_SUB('2025-04-24', INTERVAL 3 DAY) AND DATE_ADD('2025-04-24', INTERVAL 3 DAY)\nAND p.status = 'ACTIVE'\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-08T11:03:08.309609",
    "chart_type": null,
    "query_category": "rate_analysis",
    "sql_complexity": "simple",
    "success_score": 0.0
  },
  {
    "question": "how many new subscriptions did we get in the last 50 days",
    "sql": "SELECT COUNT(*) AS new_subscriptions FROM subscription_contract_v2 c WHERE c.subcription_start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 50 DAY)",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-08T11:04:46.817030",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "how many new subscriptions did we get in the last 50 days",
    "sql": "SELECT COUNT(p.subscription_id) * 100.0 / (SELECT COUNT(*) FROM subscription_payment_details p2) AS payment_success_rate FROM subscription_payment_details p WHERE p.status = 'ACTIVE' AND DATE(p.created_date) BETWEEN DATE_SUB('2025-04-24', INTERVAL 3 DAY) AND DATE_ADD('2025-04-24', INTERVAL 3 DAY)",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-08T11:05:23.364512",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "medium",
    "success_score": 0.0,
    "improvement_suggestion": "payement success rate has to be for 24 april 2025, with not interval and nothing just for that particular date",
    "improvement_category": "data_aggregation"
  },
  {
    "question": "and what was the payment success rate for24 april 2025",
    "sql": "\nSELECT SUM(p.trans_amount_decimal) as total_revenue, COUNT(*) as num_payments\nFROM subscription_payment_details p\nWHERE DATE(p.created_date) BETWEEN DATE_SUB('2025-04-24', INTERVAL 3 DAY) AND DATE_ADD('2025-04-24', INTERVAL 3 DAY)\nAND p.status = 'ACTIVE'\n",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-08T11:05:37.625482",
    "chart_type": null,
    "query_category": "rate_analysis",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "total revenue is required for april 2025",
    "improvement_category": "general_improvement"
  },
  {
    "question": "number of merchants with more than 5 subscriptions and number of merchants with more than 5 payments",
    "sql": "\nSELECT 'More than 5 Subscriptions' as category, COUNT(*) as value \nFROM (SELECT merchant_user_id FROM subscription_contract_v2 GROUP BY merchant_user_id HAVING COUNT(*) > 5) t1\nUNION ALL\nSELECT 'More than 5 Payments' as category, COUNT(*) as value  \nFROM (SELECT c.merchant_user_id FROM subscription_contract_v2 c \n      JOIN subscription_payment_details p ON c.subscription_id = p.subscription_id \n      WHERE p.status = 'ACTIVE'\n      GROUP BY c.merchant_user_id HAVING COUNT(p.subscription_id) > 5) t2\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-08T11:52:31.535259",
    "chart_type": null,
    "query_category": "user_analysis",
    "sql_complexity": "complex",
    "success_score": 1.0
  },
  {
    "question": "Create a pie chart breakdown of successful vs failed payments",
    "sql": "\nSELECT \n    CASE WHEN status = 'ACTIVE' THEN 'Successful' ELSE 'Failed' END as category,\n    COUNT(*) as value\nFROM subscription_payment_details\nGROUP BY CASE WHEN status = 'ACTIVE' THEN 'Successful' ELSE 'Failed' END\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-08T11:53:02.600592",
    "chart_type": null,
    "query_category": "pie_chart_request",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "generatea pie chart showing success ratea nd failure for april 2025",
    "sql": "\nSELECT \n    CASE WHEN status = 'ACTIVE' THEN 'Successful' ELSE 'Failed' END as category,\n    COUNT(*) as value\nFROM subscription_payment_details\nWHERE WHERE DATE_FORMAT(p.created_date, '%Y-%m') = '2025-04' GROUP BY CASE WHEN status = 'ACTIVE' THEN 'Successful' ELSE 'Failed' END\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-08T11:53:36.146232",
    "chart_type": null,
    "query_category": "pie_chart_request",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "umber of subscriptions between 1 may 2025 and 31 may 2025",
    "sql": "\nSELECT COUNT(*) as num_subscriptions \nFROM subscription_contract_v2 \nWHERE DATE(subcription_start_date) BETWEEN '2025-05-01' AND '2025-05-31'\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-08T11:53:47.741903",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "give me top 10 merchants based on their r total payement",
    "sql": "SELECT c.merchant_user_id, COALESCE(c.user_email, 'Email not provided') as email, COALESCE(c.user_name, 'Name not provided') as name, SUM(p.trans_amount_decimal) as total_payment FROM subscription_contract_v2 c LEFT JOIN subscription_payment_details p ON c.subscription_id = p.subscription_id WHERE p.status = 'ACTIVE' GROUP BY c.merchant_user_id, email, name ORDER BY total_payment DESC LIMIT 10",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-08T13:21:15.352934",
    "chart_type": null,
    "query_category": "user_analysis",
    "sql_complexity": "medium",
    "success_score": 1.0
  },
  {
    "question": "show me bar chart of the top 5 merchants by total payeemnt revenue",
    "sql": "SELECT c.merchant_user_id AS category, SUM(p.trans_amount_decimal) AS value FROM subscription_contract_v2 c LEFT JOIN subscription_payment_details p ON c.subscription_id = p.subscription_id WHERE p.status = 'ACTIVE' GROUP BY c.merchant_user_id ORDER BY value DESC LIMIT 5",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-08T14:31:19.181852",
    "chart_type": null,
    "query_category": "user_analysis",
    "sql_complexity": "medium",
    "success_score": 1.0
  },
  {
    "question": "Visualize payment data with a bar chart",
    "sql": "\nSELECT c.merchant_user_id, COUNT(*) AS total_payments\nFROM subscription_payment_details p\nJOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id\nGROUP BY c.merchant_user_id\nORDER BY total_payments DESC\nLIMIT 20\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-08T14:43:20.484238",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "medium",
    "success_score": 1.0
  },
  {
    "question": "number of unique merchnats",
    "sql": "SELECT COUNT(DISTINCT c.merchant_user_id) AS unique_merchants, 'All Time' as period FROM subscription_contract_v2 c",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-07-08T14:43:54.881108",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "no need of graph",
    "improvement_category": "general_improvement"
  },
  {
    "question": "number of unique merchnats (no need of graph)",
    "sql": "SELECT COUNT(DISTINCT c.merchant_user_id) AS unique_merchants FROM subscription_contract_v2 c",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-08T14:44:03.653437",
=======
    "question": "Show me the top 10 customers",
    "sql": "SELECT c.merchant_user_id, COALESCE(c.user_email, 'Email not provided') as email, COALESCE(c.user_name, 'Name not provided') as name, COALESCE(c.renewal_amount, c.max_amount_decimal, 0) as subscription_value FROM subscription_contract_v2 c ORDER BY COALESCE(c.renewal_amount, c.max_amount_decimal, 0) DESC LIMIT 10",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-04T12:31:48.300377",
>>>>>>> upstream/main
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  }
]